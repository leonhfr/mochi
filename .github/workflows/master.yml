name: CI

on:
  push:
    tags:
      - v*
    branches:
      - master

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache: true
          go-version-file: go.mod

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61

      - name: Test
        run: go test -race -v ./...

      - name: Build
        uses: goreleaser/goreleaser-action@v6
        with:
          version: v2.3.2
          args: release --snapshot --clean

  action-run:
    needs: checks
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache: true
          go-version-file: go.mod

      - name: Build
        uses: goreleaser/goreleaser-action@v6
        with:
          version: v2.3.2
          args: release --snapshot --clean

      - name: Run action
        id: action
        uses: ./
        with:
          api_token: ${{ secrets.MOCHI_TOKEN }}
          workspace: testdata

      - name: Print output
        run: echo "${{ steps.action.outputs.lockfile_updated }}"

      - name: Update mochi lock file
        if: steps.action.outputs.lockfile_updated == 'true'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update mochi lock file
          file_pattern: testdata/mochi-lock.json

  action-release:
    needs: checks
    # if: startsWith(github.event.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache: true
          go-version-file: go.mod

      - name: Build
        uses: goreleaser/goreleaser-action@v6
        with:
          version: v2.3.2
          args: release --snapshot --clean

      - name: Release
        run: |
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          git checkout --orphan release
          git reset
          git add action.yml action.js dist --force
          git commit -m"Update binaries"
          git push origin release --force

  cli-release:
    needs: checks
    if: startsWith(github.event.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache: true
          go-version-file: go.mod

      - name: Release
        uses: goreleaser/goreleaser-action@v6
        with:
          version: v2.3.2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
